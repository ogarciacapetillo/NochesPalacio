using Microsoft.VisualStudio.TestTools.WebTesting;
using System;
using Newtonsoft.Json.Linq;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Globalization;

namespace PerformanceLibrary.ExtractionRules
{
    [DisplayName("Extract JSON Text")]
    [Description("Custom extraction rule for extracting values from JSON web response generated by web performance test")]
    public class JsonTextExtractor : ExtractionRule
    {
        /// <summary>
        ///  The name of the json value to return, null to return all json
        /// </summary>
        public String Name { get; set; }

        /// <summary>
        ///  Is the parameter required (fail if not found)
        /// </summary>
        public Boolean Required { get; set; }

        public override void Extract(object sender, ExtractionEventArgs e)
        {
            // Make sure we have a response
            if (!System.String.IsNullOrWhiteSpace(e.Response.BodyString))
            {
                // Get the response string, and parse into json
                string json = e.Response.BodyString;

                // Return all if we don't have a name
                if (System.String.IsNullOrWhiteSpace(this.Name))
                {
                    e.WebTest.Context.Add(this.ContextParameterName, json);
                    e.Success = true;
                    return;
                }

                // Parse if we need to find the text token.
                JObject data = JObject.Parse(json);

                // Make sure we have some json data
                if (data != null)
                {
                    var value = data.SelectToken(Name);

                    if (value != null)
                    {
                        e.WebTest.Context.Add(this.ContextParameterName, value);
                        e.Success = true;
                        return;
                    }
                }
            }

            if (!Required)
            {
                e.Success = true;
                return;
            }

            e.Success = false;
            e.Message = String.Format(CultureInfo.CurrentCulture, "Not Found: {0}", Name);
        }
    }
}
